{"ast":null,"code":"var _jsxFileName = \"/Users/macosm1/Desktop/projects/basecamp/src/components/homePage/news/News.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\nimport ScrollComponent from \"../../UI/ScrollComponent\";\nimport styles from \"./News.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = () => {\n  _s();\n  const [displayedContent, setDisplayedContent] = useState([]);\n  const content = [{\n    time: \"10:00 AM\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n  }, {\n    time: \"11:00 AM\",\n    text: \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n  }\n  // Add more content items as needed\n  ];\n  const handleResize = () => {\n    const screenWidth = window.innerWidth;\n    if (screenWidth >= 1900) {\n      setDisplayedContent(content.slice(0, 4));\n    } else if (screenWidth < 1023) {\n      setDisplayedContent(content.slice(0, 3));\n    } else {\n      setDisplayedContent(content);\n    }\n  };\n  useEffect(() => {\n    // Set initial displayed content based on window width\n    handleResize();\n\n    // Add event listener for window resize\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.news,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scroll Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollComponent, {\n      content: displayedContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(News, \"hlKfe5ZkhCQd9MJy9IuUkQVOexs=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["ScrollComponent","styles","jsxDEV","_jsxDEV","News","_s","displayedContent","setDisplayedContent","useState","content","time","text","handleResize","screenWidth","window","innerWidth","slice","useEffect","addEventListener","removeEventListener","className","news","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macosm1/Desktop/projects/basecamp/src/components/homePage/news/News.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\nimport ScrollComponent from \"../../UI/ScrollComponent\";\nimport styles from \"./News.module.css\";\n\nconst News = () => {\n  const [displayedContent, setDisplayedContent] = useState([]);\n  const content = [\n    {\n      time: \"10:00 AM\",\n      text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    },\n    {\n      time: \"11:00 AM\",\n      text: \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n    },\n    // Add more content items as needed\n  ];\n\n  const handleResize = () => {\n    const screenWidth = window.innerWidth;\n    if (screenWidth >= 1900) {\n      setDisplayedContent(content.slice(0, 4));\n    } else if (screenWidth < 1023) {\n      setDisplayedContent(content.slice(0, 3));\n    } else {\n      setDisplayedContent(content);\n    }\n  };\n\n  useEffect(() => {\n    // Set initial displayed content based on window width\n    handleResize();\n\n    // Add event listener for window resize\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return (\n    <div className={styles.news}>\n      <h1>Scroll Component</h1>\n      <ScrollComponent content={displayedContent} />\n    </div>\n  );\n};\n\nexport default News;\n"],"mappings":";;AAAA;AACA,OAAOA,eAAe,MAAM,0BAA0B;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMC,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACR,CAAC,EACD;IACED,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACR;EACA;EAAA,CACD;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU;IACrC,IAAIF,WAAW,IAAI,IAAI,EAAE;MACvBN,mBAAmB,CAACE,OAAO,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAIH,WAAW,GAAG,IAAI,EAAE;MAC7BN,mBAAmB,CAACE,OAAO,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,MAAM;MACLT,mBAAmB,CAACE,OAAO,CAAC;IAC9B;EACF,CAAC;EAEDQ,SAAS,CAAC,MAAM;IACd;IACAL,YAAY,CAAC,CAAC;;IAEd;IACAE,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAEN,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXE,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA;IAAKiB,SAAS,EAAEnB,MAAM,CAACoB,IAAK;IAAAC,QAAA,gBAC1BnB,OAAA;MAAAmB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBvB,OAAA,CAACH,eAAe;MAACS,OAAO,EAAEH;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5CID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}